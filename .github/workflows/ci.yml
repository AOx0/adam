name: Cargo Build & Test

on:
  push:
    branches:
      - main
  pull_request:
  release:
    types: [created]
  workflow_dispatch:

env:
  CARGO_TERM_COLOR: always

jobs:
  build_and_test:
    name: Rust project - latest
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Install lld
        run: sudo apt-get install -y lld
      - name: Setup Stable Rust
        run: |
          rustup update stable && rustup default stable
      - name: Install Tailwind CSS
        run: |
          wget -q https://github.com/tailwindlabs/tailwindcss/releases/download/v3.4.15/tailwindcss-linux-x64 -O /usr/local/bin/tailwindcss
          chmod +x /usr/local/bin/tailwindcss
      - name: Install just
        uses: baptiste0928/cargo-install@v3
        with:
          crate: just
      - name: Install bpf-linker
        uses: baptiste0928/cargo-install@v3
        with:
          crate: bpf-linker
      - name: Install cargo-nextest
        uses: baptiste0928/cargo-install@v3
        with:
          crate: cargo-nextest
      - name: Setup Nightly Rust
        run: |
          rustup update nightly && rustup default nightly
          rustup component add rustc-codegen-cranelift-preview --toolchain nightly
      - run: just build-firewall
      - run: cargo nextest run

  produce_binaries:
    name: Produce Binaries
    runs-on: ubuntu-latest
    if: github.event_name == 'release' || github.event_name == 'workflow_dispatch'
    steps:
      - uses: actions/checkout@v4
      - name: Install lld
        run: sudo apt-get install -y lld
      - name: Setup Stable Rust
        run: |
          rustup update stable && rustup default stable
      - name: Install Tailwind CSS
        run: |
          wget -q https://github.com/tailwindlabs/tailwindcss/releases/download/v3.4.15/tailwindcss-linux-x64 -O /usr/local/bin/tailwindcss
          chmod +x /usr/local/bin/tailwindcss
      - name: Install just
        uses: baptiste0928/cargo-install@v3
        with:
          crate: just
      - name: Install bpf-linker
        uses: baptiste0928/cargo-install@v3
        with:
          crate: bpf-linker
      - name: Install cargo-nextest
        uses: baptiste0928/cargo-install@v3
        with:
          crate: cargo-nextest
      - name: Setup Nightly Rust
        run: |
          rustup update nightly && rustup default nightly
          rustup component add rustc-codegen-cranelift-preview --toolchain nightly
      - run: just build --release
      - name: Prepare Binaries for Release
        run: |
          mkdir -p target/release/binaries
          for bin in $(cargo run --bin 2>&1 | grep '    ' | sed -r 's/^\s+//' | grep -v xtask ); do
            cp "./target/release/$bin" "./target/release/binaries/"
          done
      - name: Create GitHub Release
        uses: softprops/action-gh-release@v1
        with:
          files: target/release/binaries/*
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
